<testExecutions version="1">
  <file path="app/components/core/buttons/FLPButton.test.tsx">
    <testCase name="FLPButton - should render correctly" duration="15" />
    <testCase name="FLPButton - should render correctly with props" duration="4" />
    <testCase name="FLPButton - should call onPress when clicked" duration="3" />
    <testCase name="FLPButton - should not call onPress when clicked and isDisabled is true" duration="2" />
    <testCase name="FLPButton - should not call onPress when clicked and preventFocusOnPress is true" duration="2" />
    <testCase name="FLPButton - should not call onPress when clicked and isLoading is true" duration="2" />
  </file>
  <file path="app/utils/supabase.test.ts">
    <testCase name="createClient() - createClient() returns a Supabase client" duration="2" />
    <testCase name="getSupaBaseUrl() - getSupaBaseUrl() returns the SUPABASE_URL env var" duration="0" />
    <testCase name="getSupaBaseUrl() - getSupaBaseUrl() returns the SUPABASE_URL window.env var" duration="0" />
    <testCase name="getSupabaseAnonKey() - getSupabaseAnonKey() returns the SUPABASE_ANON_KEY env var" duration="0" />
    <testCase name="getSupabaseAnonKey() - getSupabaseAnonKey() returns the SUPABASE_ANON_KEY window.env var" duration="1" />
  </file>
  <file path="app/utils/utils.test.ts">
    <testCase name="validateEmail - validateEmail returns false for non-emails" duration="1" />
    <testCase name="validateEmail - validateEmail returns true for emails" duration="0" />
    <testCase name="safeRedirect - safeRedirect returns the default redirect if to is not a string" duration="0" />
    <testCase name="safeRedirect - safeRedirect returns the default redirect if to is not a relative path" duration="0" />
    <testCase name="safeRedirect - safeRedirect returns to if it is a relative path" duration="0" />
    <testCase name="safeRedirect - safeREdirect returns the given default redirect if to is not a relative path" duration="0" />
    <testCase name="useMatchesData - useMatchesData returns undefined if no matching routes" duration="0" />
    <testCase name="useMatchesData - useMatchesData returns the matching route data" duration="1" />
  </file>
</testExecutions>