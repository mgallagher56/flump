// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`<FLPInput /> > should render as expected 1`] = `
<div>
  <script
    nonce=""
  >
    ((e,r,s,u,d,m,l,h)=&gt;
    {let c=document.documentElement,v=["light","dark"];function p(i){(Array.isArray(e)?e:[e]).forEach(y=&gt;
    {let k=y==="class",S=k&&m?d.map(f=&gt;
    m[f]||f):d;k?(c.classList.remove(...S),c.classList.add(i)):c.setAttribute(y,i)}),R(i)}function R(i){h&&v.includes(i)&&(c.style.colorScheme=i)}function a(){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}if(u)p(u);else try{let i=localStorage.getItem(r)||s,y=l&&i==="system"?a():i;p(y)}catch(i){}})("class","theme","system",null,["light","dark"],null,true,true)
  </script>
  <div
    class="d_flex flex-d_column gap_2"
  >
    <label
      for="Test"
    >
      Test
    </label>
    <div>
      <div
        class="css-1op6ogi"
      >
        <input
          class="chakra-input css-1145hk9"
          id="Test"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<FLPInput /> > should render as expected with error 1`] = `
<div>
  <script
    nonce=""
  >
    ((e,r,s,u,d,m,l,h)=&gt;
    {let c=document.documentElement,v=["light","dark"];function p(i){(Array.isArray(e)?e:[e]).forEach(y=&gt;
    {let k=y==="class",S=k&&m?d.map(f=&gt;
    m[f]||f):d;k?(c.classList.remove(...S),c.classList.add(i)):c.setAttribute(y,i)}),R(i)}function R(i){h&&v.includes(i)&&(c.style.colorScheme=i)}function a(){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}if(u)p(u);else try{let i=localStorage.getItem(r)||s,y=l&&i==="system"?a():i;p(y)}catch(i){}})("class","theme","system",null,["light","dark"],null,true,true)
  </script>
  <div
    class="d_flex flex-d_column gap_2"
  >
    <label
      for="Test"
    >
      Test
    </label>
    <div>
      <div
        class="css-1op6ogi"
      >
        <input
          class="chakra-input css-1145hk9"
          id="Test"
        />
        <span
          class="c_red.500 fw_bold"
        >
          Error
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`<FLPInput /> > should render as expected with value 1`] = `
<div>
  <script
    nonce=""
  >
    ((e,r,s,u,d,m,l,h)=&gt;
    {let c=document.documentElement,v=["light","dark"];function p(i){(Array.isArray(e)?e:[e]).forEach(y=&gt;
    {let k=y==="class",S=k&&m?d.map(f=&gt;
    m[f]||f):d;k?(c.classList.remove(...S),c.classList.add(i)):c.setAttribute(y,i)}),R(i)}function R(i){h&&v.includes(i)&&(c.style.colorScheme=i)}function a(){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}if(u)p(u);else try{let i=localStorage.getItem(r)||s,y=l&&i==="system"?a():i;p(y)}catch(i){}})("class","theme","system",null,["light","dark"],null,true,true)
  </script>
  <div
    class="d_flex flex-d_column gap_2"
  >
    <label
      for="Test"
    >
      Test
    </label>
    <div>
      <div
        class="css-1op6ogi"
      >
        <input
          class="chakra-input css-1145hk9"
          id="Test"
          value="Value"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<FLPInput /> > should render as expected with value and error 1`] = `
<div>
  <script
    nonce=""
  >
    ((e,r,s,u,d,m,l,h)=&gt;
    {let c=document.documentElement,v=["light","dark"];function p(i){(Array.isArray(e)?e:[e]).forEach(y=&gt;
    {let k=y==="class",S=k&&m?d.map(f=&gt;
    m[f]||f):d;k?(c.classList.remove(...S),c.classList.add(i)):c.setAttribute(y,i)}),R(i)}function R(i){h&&v.includes(i)&&(c.style.colorScheme=i)}function a(){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}if(u)p(u);else try{let i=localStorage.getItem(r)||s,y=l&&i==="system"?a():i;p(y)}catch(i){}})("class","theme","system",null,["light","dark"],null,true,true)
  </script>
  <div
    class="d_flex flex-d_column gap_2"
  >
    <label
      for="Test"
    >
      Test
    </label>
    <div>
      <div
        class="css-1op6ogi"
      >
        <input
          class="chakra-input css-1145hk9"
          id="Test"
          value="Value"
        />
        <span
          class="c_red.500 fw_bold"
        >
          Error
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`<FLPInput /> > should render as expected without a label 1`] = `
<div>
  <script
    nonce=""
  >
    ((e,r,s,u,d,m,l,h)=&gt;
    {let c=document.documentElement,v=["light","dark"];function p(i){(Array.isArray(e)?e:[e]).forEach(y=&gt;
    {let k=y==="class",S=k&&m?d.map(f=&gt;
    m[f]||f):d;k?(c.classList.remove(...S),c.classList.add(i)):c.setAttribute(y,i)}),R(i)}function R(i){h&&v.includes(i)&&(c.style.colorScheme=i)}function a(){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}if(u)p(u);else try{let i=localStorage.getItem(r)||s,y=l&&i==="system"?a():i;p(y)}catch(i){}})("class","theme","system",null,["light","dark"],null,true,true)
  </script>
  <div
    class="d_flex flex-d_column gap_2"
  >
    <label
      for="Test"
      hidden=""
    >
      Test
    </label>
    <div>
      <div
        class="css-1op6ogi"
      >
        <input
          class="chakra-input css-1145hk9"
          id="Test"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<FLPInput /> > should render elements as a row 1`] = `
<div>
  <script
    nonce=""
  >
    ((e,r,s,u,d,m,l,h)=&gt;
    {let c=document.documentElement,v=["light","dark"];function p(i){(Array.isArray(e)?e:[e]).forEach(y=&gt;
    {let k=y==="class",S=k&&m?d.map(f=&gt;
    m[f]||f):d;k?(c.classList.remove(...S),c.classList.add(i)):c.setAttribute(y,i)}),R(i)}function R(i){h&&v.includes(i)&&(c.style.colorScheme=i)}function a(){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}if(u)p(u);else try{let i=localStorage.getItem(r)||s,y=l&&i==="system"?a():i;p(y)}catch(i){}})("class","theme","system",null,["light","dark"],null,true,true)
  </script>
  <div
    class="d_flex flex-d_row ai_center gap_4"
  >
    <label
      for="Test"
    >
      Test
    </label>
    <div>
      <div
        class="css-1op6ogi"
      >
        <input
          class="chakra-input css-1145hk9"
          id="Test"
        />
      </div>
    </div>
  </div>
</div>
`;
